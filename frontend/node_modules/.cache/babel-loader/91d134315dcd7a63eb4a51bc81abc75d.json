{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5001/api/nasa'; // Adjust the URL based on your backend configuration\n\nexport const getApod = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/apod`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching APOD:', error);\n    throw error;\n  }\n};\nexport const getMarsPhotos = async (rover, sol) => {\n  try {\n    const response = await axios.get(`${API_URL}/mars-photos`, {\n      params: {\n        rover,\n        sol\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching Mars photos:', error);\n    throw error;\n  }\n};\nexport const getNeoWs = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/neo`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching NEO data:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getApod","response","get","data","error","console","getMarsPhotos","rover","sol","params","getNeoWs"],"sources":["C:/Users/user/OneDrive/Desktop/bounce insights/nasa-data-visualization/frontend/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5001/api/nasa'; // Adjust the URL based on your backend configuration\n\nexport const getApod = async () => {\n    try {\n        const response = await axios.get(`${API_URL}/apod`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching APOD:', error);\n        throw error;\n    }\n};\n\nexport const getMarsPhotos = async (rover, sol) => {\n    try {\n        const response = await axios.get(`${API_URL}/mars-photos`, {\n            params: { rover, sol }\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching Mars photos:', error);\n        throw error;\n    }\n};\n\nexport const getNeoWs = async () => {\n    try {\n        const response = await axios.get(`${API_URL}/neo`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching NEO data:', error);\n        throw error;\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,gCAAgC,CAAC,CAAC;;AAElD,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC/B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,OAAO,CAAC;IACnD,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAOC,KAAK,EAAEC,GAAG,KAAK;EAC/C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,cAAc,EAAE;MACvDU,MAAM,EAAE;QAAEF,KAAK;QAAEC;MAAI;IACzB,CAAC,CAAC;IACF,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMM,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,MAAM,CAAC;IAClD,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}