{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\bounce insights\\\\nasa-data-visualization\\\\frontend\\\\src\\\\components\\\\DataVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { getApod } from '../services/apiService';\nimport './DataVisualization.css';\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, Title, CategoryScale, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, LinearScale, Title, CategoryScale, Tooltip, Legend);\nconst DataVisualization = ({\n  data,\n  theme\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    // Fetch APOD data for the last 7 days\n    const fetchChartData = async () => {\n      const today = new Date();\n      const promises = [];\n      for (let i = 6; i >= 0; i--) {\n        const date = new Date(today);\n        date.setDate(today.getDate() - i);\n        const dateStr = date.toISOString().split('T')[0];\n        promises.push(getApod(dateStr));\n      }\n      const results = await Promise.all(promises);\n      setChartData({\n        labels: results.map(d => d.date),\n        datasets: [{\n          label: 'Explanation Length',\n          data: results.map(d => d.explanation.length),\n          fill: false,\n          borderColor: '#4fd1c5',\n          tension: 0.1\n        }]\n      });\n    };\n    fetchChartData();\n  }, []);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dv-no-data\",\n    children: \"No data available.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 23\n  }, this);\n\n  // Choose color based on theme\n  const chartTextColor = theme === 'light' ? '#222' : '#f8fafc';\n  const chartGridColor = theme === 'light' ? 'rgba(0,0,0,0.07)' : 'rgba(200,200,200,0.1)';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dv-bg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dv-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"dv-title\",\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), data.media_type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"dv-image\",\n        src: data.url,\n        alt: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this) : data.media_type === 'video' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dv-video-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: data.url,\n          title: data.title,\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dv-explanation\",\n        children: data.explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dv-date\",\n        children: data.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dv-chart-container\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: {\n            plugins: {\n              legend: {\n                labels: {\n                  color: chartTextColor\n                }\n              },\n              title: {\n                display: true,\n                text: 'APOD Explanation Length (Last 7 Days)',\n                color: chartTextColor,\n                font: {\n                  size: 18\n                }\n              }\n            },\n            scales: {\n              x: {\n                ticks: {\n                  color: chartTextColor\n                },\n                grid: {\n                  color: chartGridColor\n                }\n              },\n              y: {\n                ticks: {\n                  color: chartTextColor\n                },\n                grid: {\n                  color: chartGridColor\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(DataVisualization, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = DataVisualization;\nexport default DataVisualization;\nvar _c;\n$RefreshReg$(_c, \"DataVisualization\");","map":{"version":3,"names":["React","useEffect","useState","Line","getApod","Chart","ChartJS","LineElement","PointElement","LinearScale","Title","CategoryScale","Tooltip","Legend","jsxDEV","_jsxDEV","register","DataVisualization","data","theme","_s","chartData","setChartData","fetchChartData","today","Date","promises","i","date","setDate","getDate","dateStr","toISOString","split","push","results","Promise","all","labels","map","d","datasets","label","explanation","length","fill","borderColor","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","chartTextColor","chartGridColor","title","media_type","src","url","alt","frameBorder","allow","allowFullScreen","options","plugins","legend","color","display","text","font","size","scales","x","ticks","grid","y","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/Desktop/bounce insights/nasa-data-visualization/frontend/src/components/DataVisualization.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { getApod } from '../services/apiService';\nimport './DataVisualization.css';\nimport {\n  Chart as ChartJS,\n  LineElement,\n  PointElement,\n  LinearScale,\n  Title,\n  CategoryScale,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  LineElement,\n  PointElement,\n  LinearScale,\n  Title,\n  CategoryScale,\n  Tooltip,\n  Legend\n);\n\nconst DataVisualization = ({ data, theme }) => {\n    const [chartData, setChartData] = useState(null);\n\n    useEffect(() => {\n        // Fetch APOD data for the last 7 days\n        const fetchChartData = async () => {\n            const today = new Date();\n            const promises = [];\n            for (let i = 6; i >= 0; i--) {\n                const date = new Date(today);\n                date.setDate(today.getDate() - i);\n                const dateStr = date.toISOString().split('T')[0];\n                promises.push(getApod(dateStr));\n            }\n            const results = await Promise.all(promises);\n            setChartData({\n                labels: results.map(d => d.date),\n                datasets: [\n                    {\n                        label: 'Explanation Length',\n                        data: results.map(d => d.explanation.length),\n                        fill: false,\n                        borderColor: '#4fd1c5',\n                        tension: 0.1\n                    }\n                ]\n            });\n        };\n        fetchChartData();\n    }, []);\n\n    if (!data) return <div className=\"dv-no-data\">No data available.</div>;\n\n    // Choose color based on theme\n    const chartTextColor = theme === 'light' ? '#222' : '#f8fafc';\n    const chartGridColor = theme === 'light' ? 'rgba(0,0,0,0.07)' : 'rgba(200,200,200,0.1)';\n\n    return (\n        <div className=\"dv-bg\">\n            <div className=\"dv-card\">\n                <h2 className=\"dv-title\">{data.title}</h2>\n                {data.media_type === 'image' ? (\n                    <img className=\"dv-image\" src={data.url} alt={data.title} />\n                ) : data.media_type === 'video' ? (\n                    <div className=\"dv-video-wrapper\">\n                        <iframe\n                            src={data.url}\n                            title={data.title}\n                            frameBorder=\"0\"\n                            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                            allowFullScreen\n                        ></iframe>\n                    </div>\n                ) : null}\n                <p className=\"dv-explanation\">{data.explanation}</p>\n                <div className=\"dv-date\">{data.date}</div>\n                {chartData && (\n                    <div className=\"dv-chart-container\">\n                        <Line\n                            data={chartData}\n                            options={{\n                                plugins: {\n                                    legend: {\n                                        labels: { color: chartTextColor }\n                                    },\n                                    title: {\n                                        display: true,\n                                        text: 'APOD Explanation Length (Last 7 Days)',\n                                        color: chartTextColor,\n                                        font: { size: 18 }\n                                    }\n                                },\n                                scales: {\n                                    x: {\n                                        ticks: { color: chartTextColor },\n                                        grid: { color: chartGridColor }\n                                    },\n                                    y: {\n                                        ticks: { color: chartTextColor },\n                                        grid: { color: chartGridColor }\n                                    }\n                                }\n                            }}\n                        />\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default DataVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}