{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\bounce insights\\\\nasa-data-visualization\\\\frontend\\\\src\\\\components\\\\DataVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { getApod } from '../services/apiService';\nimport './DataVisualization.css';\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, Title, CategoryScale, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, LinearScale, Title, CategoryScale, Tooltip, Legend);\nconst DataVisualization = ({\n  data,\n  theme,\n  dataSource,\n  apodDays = 7\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    if (dataSource === 'apod') {\n      const fetchChartData = async () => {\n        const today = new Date();\n        const promises = [];\n        for (let i = apodDays - 1; i >= 0; i--) {\n          const date = new Date(today);\n          date.setDate(today.getDate() - i);\n          const dateStr = date.toISOString().split('T')[0];\n          promises.push(getApod(dateStr));\n        }\n        const results = await Promise.all(promises);\n        const lineColor = theme === 'light' ? '#0077b6' : '#4fd1c5';\n        setChartData({\n          labels: results.map(d => d.date),\n          datasets: [{\n            label: 'Explanation Length',\n            data: results.map(d => d.explanation.length),\n            fill: false,\n            borderColor: lineColor,\n            backgroundColor: lineColor,\n            pointBorderColor: lineColor,\n            pointBackgroundColor: lineColor,\n            tension: 0.1\n          }]\n        });\n      };\n      fetchChartData();\n    }\n  }, [theme, apodDays, dataSource]);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dv-no-data\",\n    children: \"No data available.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 21\n  }, this);\n\n  // Choose color based on theme\n  const chartTextColor = theme === 'light' ? '#222' : '#f8fafc';\n  const chartGridColor = theme === 'light' ? 'rgba(0,0,0,0.07)' : 'rgba(200,200,200,0.1)';\n  // const lineColor = theme === 'light' ? '#0077b6' : '#4fd1c5';\n\n  if (dataSource === 'apod') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dv-bg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dv-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"dv-title\",\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), data.media_type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"dv-image\",\n          src: data.url,\n          alt: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this) : data.media_type === 'video' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dv-video-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: data.url,\n            title: data.title,\n            frameBorder: \"0\",\n            allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"dv-explanation\",\n          children: data.explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dv-date\",\n          children: data.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dv-chart-container\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData,\n            options: {\n              plugins: {\n                legend: {\n                  labels: {\n                    color: chartTextColor\n                  }\n                },\n                title: {\n                  display: true,\n                  text: 'APOD Explanation Length (Last 7 Days)',\n                  color: chartTextColor,\n                  font: {\n                    size: 18\n                  }\n                }\n              },\n              scales: {\n                x: {\n                  ticks: {\n                    color: chartTextColor\n                  },\n                  grid: {\n                    color: chartGridColor\n                  }\n                },\n                y: {\n                  ticks: {\n                    color: chartTextColor\n                  },\n                  grid: {\n                    color: chartGridColor\n                  }\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n  if (dataSource === 'mars') {\n    // Example: show Mars Rover Photos as a gallery\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dv-bg ${theme === 'light' ? 'light' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dv-card ${theme === 'light' ? 'light' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Mars Rover Photos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 16\n          },\n          children: Array.isArray(data.photos) && data.photos.length > 0 ? data.photos.slice(0, 12).map(photo => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: photo.img_src,\n            alt: photo.camera.full_name,\n            style: {\n              width: 200\n            }\n          }, photo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No photos found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n  if (dataSource === 'epic') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dv-bg ${theme === 'light' ? 'light' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dv-card ${theme === 'light' ? 'light' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"EPIC Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 16\n          },\n          children: Array.isArray(data) && data.length > 0 ? data.slice(0, 12).map(item => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://epic.gsfc.nasa.gov/archive/natural/${item.date.split(' ')[0].replace(/-/g, '/')}/png/${item.image}.png`,\n            alt: item.caption,\n            style: {\n              width: 200\n            }\n          }, item.identifier, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No images found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n  if (dataSource === 'neo') {\n    // Flatten the NEO object into an array\n    const neoArray = data.near_earth_objects ? Object.values(data.near_earth_objects).flat() : [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dv-bg ${theme === 'light' ? 'light' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dv-card ${theme === 'light' ? 'light' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Near Earth Objects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), neoArray.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Diameter (m)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Hazardous?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Close Approach Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: neoArray.slice(0, 10).map(obj => {\n              var _obj$close_approach_d;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: obj.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: obj.estimated_diameter.meters.estimated_diameter_max.toFixed(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: obj.is_potentially_hazardous_asteroid ? 'Yes' : 'No'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_obj$close_approach_d = obj.close_approach_data[0]) === null || _obj$close_approach_d === void 0 ? void 0 : _obj$close_approach_d.close_approach_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this)]\n              }, obj.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No NEO data found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  }\n  let recommendedImages = [];\n  if (dataSource === 'images' && data && data.collection && Array.isArray(data.collection.items) && data.collection.items.length > 0) {\n    const allItems = data.collection.items.slice(12);\n    recommendedImages = allItems.sort(() => 0.5 - Math.random()).slice(0, 3).map(item => {\n      var _item$links, _item$links$;\n      return {\n        nasa_id: item.data[0].nasa_id,\n        url: (_item$links = item.links) === null || _item$links === void 0 ? void 0 : (_item$links$ = _item$links[0]) === null || _item$links$ === void 0 ? void 0 : _item$links$.href,\n        title: item.data[0].title\n      };\n    });\n  }\n  if (dataSource === 'images') {\n    var _data$collection;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dv-bg ${theme === 'light' ? 'light' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dv-card ${theme === 'light' ? 'light' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"NASA Image and Video Library\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 16\n          },\n          children: Array.isArray((_data$collection = data.collection) === null || _data$collection === void 0 ? void 0 : _data$collection.items) && data.collection.items.length > 0 ? data.collection.items.slice(0, 12).map(item => {\n            var _item$links2, _item$links2$;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_item$links2 = item.links) === null || _item$links2 === void 0 ? void 0 : (_item$links2$ = _item$links2[0]) === null || _item$links2$ === void 0 ? void 0 : _item$links2$.href,\n                alt: item.data[0].title,\n                style: {\n                  width: 200\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.data[0].title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this)]\n            }, item.data[0].nasa_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No images found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), dataSource === 'images' && recommendedImages && recommendedImages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dv-recommendations\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"You may also like:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 16\n            },\n            children: recommendedImages.map(img => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: img.url,\n              alt: img.title,\n              style: {\n                width: 120\n              }\n            }, img.nasa_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No visualization available for this data source.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 10\n  }, this);\n};\n_s(DataVisualization, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = DataVisualization;\nexport default DataVisualization;\nvar _c;\n$RefreshReg$(_c, \"DataVisualization\");","map":{"version":3,"names":["React","useEffect","useState","Line","getApod","Chart","ChartJS","LineElement","PointElement","LinearScale","Title","CategoryScale","Tooltip","Legend","jsxDEV","_jsxDEV","register","DataVisualization","data","theme","dataSource","apodDays","_s","chartData","setChartData","fetchChartData","today","Date","promises","i","date","setDate","getDate","dateStr","toISOString","split","push","results","Promise","all","lineColor","labels","map","d","datasets","label","explanation","length","fill","borderColor","backgroundColor","pointBorderColor","pointBackgroundColor","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","chartTextColor","chartGridColor","title","media_type","src","url","alt","frameBorder","allow","allowFullScreen","options","plugins","legend","color","display","text","font","size","scales","x","ticks","grid","y","style","flexWrap","gap","Array","isArray","photos","slice","photo","img_src","camera","full_name","width","id","item","replace","image","caption","identifier","neoArray","near_earth_objects","Object","values","flat","obj","_obj$close_approach_d","name","estimated_diameter","meters","estimated_diameter_max","toFixed","is_potentially_hazardous_asteroid","close_approach_data","close_approach_date","recommendedImages","collection","items","allItems","sort","Math","random","_item$links","_item$links$","nasa_id","links","href","_data$collection","_item$links2","_item$links2$","img","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/Desktop/bounce insights/nasa-data-visualization/frontend/src/components/DataVisualization.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { getApod } from '../services/apiService';\nimport './DataVisualization.css';\nimport {\n  Chart as ChartJS,\n  LineElement,\n  PointElement,\n  LinearScale,\n  Title,\n  CategoryScale,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  LineElement,\n  PointElement,\n  LinearScale,\n  Title,\n  CategoryScale,\n  Tooltip,\n  Legend\n);\n\nconst DataVisualization = ({ data, theme, dataSource, apodDays = 7 }) => {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    if (dataSource === 'apod') {\n      const fetchChartData = async () => {\n        const today = new Date();\n        const promises = [];\n        for (let i = apodDays - 1; i >= 0; i--) {\n          const date = new Date(today);\n          date.setDate(today.getDate() - i);\n          const dateStr = date.toISOString().split('T')[0];\n          promises.push(getApod(dateStr));\n        }\n        const results = await Promise.all(promises);\n        const lineColor = theme === 'light' ? '#0077b6' : '#4fd1c5';\n        setChartData({\n          labels: results.map(d => d.date),\n          datasets: [\n            {\n              label: 'Explanation Length',\n              data: results.map(d => d.explanation.length),\n              fill: false,\n              borderColor: lineColor,\n              backgroundColor: lineColor,\n              pointBorderColor: lineColor,\n              pointBackgroundColor: lineColor,\n              tension: 0.1\n            }\n          ]\n        });\n      };\n      fetchChartData();\n    }\n  }, [theme, apodDays, dataSource]);\n\n  if (!data) return <div className=\"dv-no-data\">No data available.</div>;\n\n  // Choose color based on theme\n  const chartTextColor = theme === 'light' ? '#222' : '#f8fafc';\n  const chartGridColor = theme === 'light' ? 'rgba(0,0,0,0.07)' : 'rgba(200,200,200,0.1)';\n  // const lineColor = theme === 'light' ? '#0077b6' : '#4fd1c5';\n\n  if (dataSource === 'apod') {\n    return (\n      <div className=\"dv-bg\">\n        <div className=\"dv-card\">\n          <h2 className=\"dv-title\">{data.title}</h2>\n          {data.media_type === 'image' ? (\n            <img className=\"dv-image\" src={data.url} alt={data.title} />\n          ) : data.media_type === 'video' ? (\n            <div className=\"dv-video-wrapper\">\n              <iframe\n                src={data.url}\n                title={data.title}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              ></iframe>\n            </div>\n          ) : null}\n          <p className=\"dv-explanation\">{data.explanation}</p>\n          <div className=\"dv-date\">{data.date}</div>\n          {chartData && (\n            <div className=\"dv-chart-container\">\n              <Line\n                data={chartData}\n                options={{\n                  plugins: {\n                    legend: { labels: { color: chartTextColor } },\n                    title: {\n                      display: true,\n                      text: 'APOD Explanation Length (Last 7 Days)',\n                      color: chartTextColor,\n                      font: { size: 18 }\n                    }\n                  },\n                  scales: {\n                    x: {\n                      ticks: { color: chartTextColor },\n                      grid: { color: chartGridColor }\n                    },\n                    y: {\n                      ticks: { color: chartTextColor },\n                      grid: { color: chartGridColor }\n                    }\n                  }\n                }}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  if (dataSource === 'mars') {\n    // Example: show Mars Rover Photos as a gallery\n    return (\n      <div className={`dv-bg ${theme === 'light' ? 'light' : ''}`}>\n        <div className={`dv-card ${theme === 'light' ? 'light' : ''}`}>\n          <h2>Mars Rover Photos</h2>\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: 16 }}>\n            {Array.isArray(data.photos) && data.photos.length > 0 ? (\n              data.photos.slice(0, 12).map(photo => (\n                <img key={photo.id} src={photo.img_src} alt={photo.camera.full_name} style={{ width: 200 }} />\n              ))\n            ) : (\n              <p>No photos found.</p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (dataSource === 'epic') {\n    return (\n      <div className={`dv-bg ${theme === 'light' ? 'light' : ''}`}>\n        <div className={`dv-card ${theme === 'light' ? 'light' : ''}`}>\n          <h2>EPIC Images</h2>\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: 16 }}>\n            {Array.isArray(data) && data.length > 0 ? (\n              data.slice(0, 12).map(item => (\n                <img\n                  key={item.identifier}\n                  src={`https://epic.gsfc.nasa.gov/archive/natural/${item.date.split(' ')[0].replace(/-/g, '/')}/png/${item.image}.png`}\n                  alt={item.caption}\n                  style={{ width: 200 }}\n                />\n              ))\n            ) : (\n              <p>No images found.</p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (dataSource === 'neo') {\n    // Flatten the NEO object into an array\n    const neoArray = data.near_earth_objects\n      ? Object.values(data.near_earth_objects).flat()\n      : [];\n\n    return (\n      <div className={`dv-bg ${theme === 'light' ? 'light' : ''}`}>\n        <div className={`dv-card ${theme === 'light' ? 'light' : ''}`}>\n          <h2>Near Earth Objects</h2>\n          {neoArray.length > 0 ? (\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Diameter (m)</th>\n                  <th>Hazardous?</th>\n                  <th>Close Approach Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {neoArray.slice(0, 10).map(obj => (\n                  <tr key={obj.id}>\n                    <td>{obj.name}</td>\n                    <td>{obj.estimated_diameter.meters.estimated_diameter_max.toFixed(1)}</td>\n                    <td>{obj.is_potentially_hazardous_asteroid ? 'Yes' : 'No'}</td>\n                    <td>{obj.close_approach_data[0]?.close_approach_date}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ) : (\n            <p>No NEO data found.</p>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  let recommendedImages = [];\n  if (\n    dataSource === 'images' &&\n    data &&\n    data.collection &&\n    Array.isArray(data.collection.items) &&\n    data.collection.items.length > 0\n  ) {\n    \n    const allItems = data.collection.items.slice(12);\n    recommendedImages = allItems\n      .sort(() => 0.5 - Math.random())\n      .slice(0, 3)\n      .map(item => ({\n        nasa_id: item.data[0].nasa_id,\n        url: item.links?.[0]?.href,\n        title: item.data[0].title,\n      }));\n  }\n\n  if (dataSource === 'images') {\n    return (\n      <div className={`dv-bg ${theme === 'light' ? 'light' : ''}`}>\n        <div className={`dv-card ${theme === 'light' ? 'light' : ''}`}>\n          <h2>NASA Image and Video Library</h2>\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: 16 }}>\n            {Array.isArray(data.collection?.items) && data.collection.items.length > 0 ? (\n              data.collection.items.slice(0, 12).map(item => (\n                <div key={item.data[0].nasa_id}>\n                  <img\n                    src={item.links?.[0]?.href}\n                    alt={item.data[0].title}\n                    style={{ width: 200 }}\n                  />\n                  <div>{item.data[0].title}</div>\n                </div>\n              ))\n            ) : (\n              <p>No images found.</p>\n            )}\n          </div>\n          {dataSource === 'images' && recommendedImages && recommendedImages.length > 0 && (\n  <div className=\"dv-recommendations\">\n    <h3>You may also like:</h3>\n    <div style={{ display: 'flex', flexWrap: 'wrap', gap: 16 }}>\n      {recommendedImages.map(img => (\n        <img key={img.nasa_id} src={img.url} alt={img.title} style={{ width: 120 }} />\n      ))}\n    </div>\n  </div>\n)}\n        </div>\n      </div>\n    );\n  }\n\n  return <div>No visualization available for this data source.</div>;\n};\n\nexport default DataVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}